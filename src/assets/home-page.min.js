"use strict";
function hamburgerToggle() {
  const e = document.querySelector(".burger"),
    t = document.querySelector(".nav-links"),
    s = document.querySelectorAll(".nav-links li"),
    a = document.querySelector(".overley");
  e.addEventListener("click", () => {
    t.classList.toggle("nav-active"),
      s.forEach((e, t) => {
        e.style.animation
          ? (e.style.animation = "")
          : (e.style.animation = `navLinksAnimate 0.5s ease forwards ${
              t / 7 + 0.3
            }s`);
      }),
      e.classList.toggle("toggle"),
      a.classList.toggle("overlay");
  }),
    a.addEventListener("click", () => {
      a.classList.remove("overlay"),
        t.classList.remove("nav-active"),
        e.classList.remove("toggle"),
        s.forEach((e, t) => {
          e.style.animation = "";
        });
    });
}
function dotsAnimation() {
  const e = document.querySelectorAll(".dot");
  e.forEach((e, t) => {
    e.style.animation = `dotAnimation 5s   linear infinite ${t / 30}s`;
  });
}
function imgLoad() {
  const e = document.querySelector(".lang-holder"),
    t = document.querySelectorAll("img[data-src]"),
    o = function (e, o) {
      const [n] = e;
      n.isIntersecting &&
        (t.forEach((e) => (e.src = e.dataset.src)), o.unobserve(n.target));
    },
    n = new IntersectionObserver(o, {
      root: null,
      threshold: 0,
      rootMargin: "350px",
    });
  n.observe(e);
}
function backToTop() {
  const e = document.querySelector("#toArrow"),
    t = document.querySelector("footer"),
    o = function (t, o) {
      const [n] = t;
      n.isIntersecting ? e.classList.add("scrolled") : (e.classList = "");
    },
    n = new IntersectionObserver(o, {
      root: null,
      threshold: 0,
      rootMargin: "140px",
    });
  n.observe(t);
}
function aboutMeImg() {
  const e = document.querySelector("#about-img_holder-img");
  const t = function (e, t) {
      const [o] = e;
      o.isIntersecting &&
        ((o.target.src = o.target.dataset.src), t.unobserve(o.target));
    },
    o = new IntersectionObserver(t, {
      root: null,
      threshold: 0,
      rootMargin: "300px",
    });
  o.observe(e);
}
function cvAlert() {
  const e = document.querySelector("#downloadCv");
  e.addEventListener("click", function () {
    alert("CV is currently not available");
  });
}
hamburgerToggle(),
  dotsAnimation(),
  imgLoad(),
  backToTop(),
  aboutMeImg(),
  cvAlert();
